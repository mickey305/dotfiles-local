# ensure dotfiles "bin.local" directory is loaded first
PATH="$HOME/.bin.local:$PATH"

# Perl Environment
if which plenv > /dev/null; then
  eval "$(plenv init -)"
fi

# Ruby Environment
if which rbenv > /dev/null; then
  eval "$(rbenv init -)"
fi

# PHP Environment
export PHPENV_ROOT=$HOME/.phpenv
if [ -d $PHPENV_ROOT ]; then
  PATH=$PATH:$PHPENV_ROOT/bin
  eval "$(phpenv init -)"
fi

# Python Environment
export PYENV_ROOT=$HOME/.pyenv
if [ -d $PYENV_ROOT ]; then
  PATH=$PATH:$PYENV_ROOT/bin
  eval "$(pyenv init -)"
fi

# nodebrew path
PATH=$PATH:$HOME/.nodebrew/current/bin

darwin_env() {
  #echo "import mac env"

  # homebrew
  PATH="/usr/local/bin:$PATH"

  # JAVA_HOME path
  # export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home
  export JAVA_HOME=$HOME/.jdkenv/java/current
  PATH=$PATH:$JAVA_HOME/bin

  # Go Environment
  export GOROOT=/usr/local/opt/go/libexec
  export GOPATH=$HOME/workspace/golang
  PATH=$PATH:$GOPATH/bin:$GOROOT/bin
}

linux_env() {
  #echo "import linux env"

  # linuxbrew
  export LINUXBREW_HOME_PATH="$HOME/.linuxbrew"
  if [ -d "${LINUXBREW_HOME_PATH}" ]; then
    PATH="$LINUXBREW_HOME_PATH/bin:$PATH"
    export MANPATH="$LINUXBREW_HOME_PATH/share/man:$MANPATH"
    export INFOPATH="$LINUXBREW_HOME_PATH/share/info:$INFOPATH"
    export LD_LIBRARY_PATH="$LINUXBREW_HOME_PATH/lib:$LD_LIBRARY_PATH"
  fi
}

case ${OSTYPE} in
darwin*) darwin_env ;;
linux*)  linux_env ;;
esac

# PATH env exporting
export -U PATH
